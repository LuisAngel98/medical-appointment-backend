{"code":"(()=>{\nvar __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var appointment_exports={};__export(appointment_exports,{handler:()=>handler});module.exports=__toCommonJS(appointment_exports);var import_dynamo=require(\"../utils/dynamo\");var import_aws_sdk=__toESM(require(\"aws-sdk\"));const handler=__name(async event=>{const{insuredId,scheduleId,countryISO}=JSON.parse(event.body||\"{}\");console.log(\"Main:\",insuredId,scheduleId,countryISO);const appointmentData={insuredId,scheduleId,countryISO,status:\"pending\"};await import_dynamo.dynamoDb.put({TableName:\"Appointments\",Item:appointmentData}).promise();const lambda=new import_aws_sdk.default.Lambda({region:\"us-east-1\",endpoint:\"http://localhost:3002\"});const countryLambda=countryISO===\"PE\"?\"medical-appointment-backend-dev-appointment_pe\":\"medical-appointment-backend-dev-appointment_cl\";console.log(appointmentData);await lambda.invoke({FunctionName:countryLambda,InvocationType:\"RequestResponse\",Payload:JSON.stringify(appointmentData)}).promise();await import_dynamo.dynamoDb.update({TableName:\"Appointments\",Key:{insuredId},UpdateExpression:\"set #st = :s\",ExpressionAttributeNames:{\"#st\":\"status\"},ExpressionAttributeValues:{\":s\":\"completed\"}}).promise();return{statusCode:200,body:JSON.stringify({message:\"Appointment processed\",status:\"completed\"})}},\"handler\");0&&(module.exports={handler});\n})()\n","warnings":[],"map":{"version":3,"mappings":";i/BAAA,gIACA,kBAAyB,2BACzB,mBAAgB,4BAET,MAAM,QAAkC,aAAO,OAAU,CAC9D,KAAM,CAAE,UAAW,WAAY,UAAW,EAAI,KAAK,MAAM,MAAM,MAAQ,IAAI,EAC3E,QAAQ,IAAI,QAAS,UAAW,WAAY,UAAU,EAEtD,MAAM,gBAAkB,CACtB,UACA,WACA,WACA,OAAQ,SACV,EAEA,MAAM,uBACH,IAAI,CACH,UAAW,eACX,KAAM,eACR,CAAC,EACA,QAAQ,EAEX,MAAM,OAAS,IAAI,eAAAA,QAAI,OAAO,CAC5B,OAAQ,YACR,SAAU,uBACZ,CAAC,EAED,MAAM,cACJ,aAAe,KACX,iDACA,iDACN,QAAQ,IAAI,eAAe,EAE3B,MAAM,OACH,OAAO,CACN,aAAc,cACd,eAAgB,kBAChB,QAAS,KAAK,UAAU,eAAe,CACzC,CAAC,EACA,QAAQ,EAEX,MAAM,uBACH,OAAO,CACN,UAAW,eACX,IAAK,CAAE,SAAU,EACjB,iBAAkB,eAClB,yBAA0B,CACxB,MAAO,QACT,EACA,0BAA2B,CACzB,KAAM,WACR,CACF,CAAC,EACA,QAAQ,EAEX,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CACnB,QAAS,wBACT,OAAQ,WACV,CAAC,CACH,CACF,EA1D+C","names":["AWS"],"ignoreList":[],"sources":["E:\\AWS\\medical-appointment-backend\\src\\handlers\\appointment.ts"],"sourcesContent":[null]}}