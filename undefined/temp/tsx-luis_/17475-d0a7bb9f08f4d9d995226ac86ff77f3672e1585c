{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var appointment_exports={};__export(appointment_exports,{handler:()=>handler});module.exports=__toCommonJS(appointment_exports);var import_appointmentService=require(\"../services/appointmentService\");const handler=__name(async event=>{const{insuredId,scheduleId,countryISO}=JSON.parse(event.body||\"{}\");const appointmentData={insuredId,scheduleId,countryISO,status:\"pending\"};try{if(event.httpMethod===\"POST\"){await(0,import_appointmentService.createAppointment)(appointmentData);return{statusCode:200,body:JSON.stringify({message:\"Appointment processed\",status:\"completed\"})}}if(event.httpMethod===\"GET\"){const insuredId2=event.pathParameters?.insuredId;if(!insuredId2){return{statusCode:400,body:JSON.stringify({message:\"insuredId is required\"})}}const appointment=await(0,import_appointmentService.getAppointment)(insuredId2);if(!appointment){return{statusCode:404,body:JSON.stringify({message:\"Appointment not found\"})}}return{statusCode:200,body:JSON.stringify(appointment)}}return{statusCode:405,body:JSON.stringify({message:\"Method Not Allowed\"})}}catch(error){return{statusCode:500,body:JSON.stringify({message:\"Internal Server Error\",error:error.message})}}},\"handler\");0&&(module.exports={handler});\n})()\n","warnings":[],"map":{"version":3,"mappings":";suBAAA,gIAEA,8BAGO,0CAEA,MAAM,QAAkC,aAAO,OAAU,CAC9D,KAAM,CAAE,UAAW,WAAY,UAAW,EAAI,KAAK,MAAM,MAAM,MAAQ,IAAI,EAC3E,MAAM,gBAA+B,CACnC,UACA,WACA,WACA,OAAQ,SACV,EACA,GAAI,CAEF,GAAI,MAAM,aAAe,OAAQ,CAC/B,QAAM,6CAAkB,eAAe,EACvC,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CACnB,QAAS,wBACT,OAAQ,WACV,CAAC,CACH,CACF,CAEA,GAAI,MAAM,aAAe,MAAO,CAC9B,MAAMA,WAAY,MAAM,gBAAgB,UACxC,GAAI,CAACA,WAAW,CACd,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CAAE,QAAS,uBAAwB,CAAC,CAC3D,CACF,CAEA,MAAM,YAAc,QAAM,0CAAeA,UAAS,EAClD,GAAI,CAAC,YAAa,CAChB,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CAAE,QAAS,uBAAwB,CAAC,CAC3D,CACF,CACA,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,WAAW,CAClC,CACF,CACA,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CAAE,QAAS,oBAAqB,CAAC,CACxD,CACF,OAAS,MAAO,CACd,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CACnB,QAAS,wBACT,MAAO,MAAM,OACf,CAAC,CACH,CACF,CACF,EAvD+C","names":["insuredId"],"ignoreList":[],"sources":["E:\\AWS\\medical-appointment-backend\\src\\handlers\\appointment.ts"],"sourcesContent":[null]}}